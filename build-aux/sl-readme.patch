diff --git a/README b/README
index a3e528d..efaeb55 100644
--- a/README
+++ b/README
@@ -1,5 +1,5 @@
-Predator and Forester
-=====================
+Predator
+========
 Predator is a practical tool for checking manipulation of dynamic data
 structures using *separation logic*.  It can be loaded directly into *GCC* as a
 *plug-in*.  This way you can easily analyse C code sources, using the existing
@@ -11,16 +11,7 @@ on the following project page:
 
     http://www.fit.vutbr.cz/research/groups/verifit/tools/predator
 
-Forester is an experimental tool for checking manipulation of dynamic data
-structures using *forest automata*.  As in case of Predator, it can be loaded
-directly into *GCC* as a *plug-in* to analyse C code sources.  However, the analysis
-itself is not yet mature enough to be able to verify ordinary programs.  Although
-Forester is intended to be as portable as GCC is, we support only Linux for now.
-You can find the latest news on the following project page:
-
-    http://www.fit.vutbr.cz/research/groups/verifit/tools/forester
-
-Predator, Code Listener, and Forester are licensed as GPLv3+, see COPYING for details.
+Predator and Code Listener are licensed as GPLv3+, see COPYING for details.
 
 Building from sources against a local build of GCC [recommended for end users]
 ==============================================================================
@@ -79,8 +70,8 @@ giving the option '-jN' to 'make', where N is the number of CPU cores plus one
 (a commonly used heuristic, there exist several others).  But first make sure
 that your machine has enough resources for building GCC in parallel.
 
-(4) Build Code Listener, Predator and Forester from sources
------------------------------------------------------------
+(4) Build Code Listener and  Predator from sources
+--------------------------------------------------
 The following command builds Code Listener, Predator and Forester from sources:
 
     make
@@ -116,22 +107,6 @@ This will show you the available options of the Predator plug-in itself:
     echo please help | gcc -fplugin=libsl.so -fplugin-arg-libsl-help -xc -
 
 
-(6) Prepare environment for running Forester transparently [optional]
----------------------------------------------------------------------
-Analogically to Predator you can also set up the environment for Forester by
-running the following script:
-
-    . fa_build/register-paths.sh
-
-Then you can again use the '-fplugin' option of GCC as documented in the gcc(1)
-man page:
-
-    gcc -fplugin=libfa.so ...
-
-This will show you the available options of the Forester plug-in itself:
-
-    echo please help | gcc -fplugin=libfa.so -fplugin-arg-libfa-help -xc -
-
 Building from sources against the system GCC
 ============================================
 This method requires a build of GCC with plug-in support compiled in (not
@@ -140,8 +115,8 @@ and the test-suite is guaranteed to fully succeed only against this version of
 GCC.  However, the Predator plug-in itself is known to work with GCC 4.5.x and
 GCC 4.6.x equally well.
 
-You can use the 'switch-host-gcc.sh' script to rebuild Code Listener, Predator,
-and Forester against a GCC build of your choice.  For details, please run
+You can use the 'switch-host-gcc.sh' script to rebuild Code Listener and
+Predator against a GCC build of your choice.  For details, please run
 'switch-host-gcc.sh' without any arguments.  The script needs to be run in the
 same directory as this README is.  If it fails, make sure your environment is
 sane.  Especially check the PATH and LD_LIBRARY_PATH environment variables.
